/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/property": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.property.id"];
          purpose?: parameters["rowFilter.property.purpose"];
          propertyType?: parameters["rowFilter.property.propertyType"];
          description?: parameters["rowFilter.property.description"];
          price?: parameters["rowFilter.property.price"];
          images?: parameters["rowFilter.property.images"];
          address?: parameters["rowFilter.property.address"];
          postalCode?: parameters["rowFilter.property.postalCode"];
          city?: parameters["rowFilter.property.city"];
          bedrooms?: parameters["rowFilter.property.bedrooms"];
          bathrooms?: parameters["rowFilter.property.bathrooms"];
          isAvailable?: parameters["rowFilter.property.isAvailable"];
          keyFeatures?: parameters["rowFilter.property.keyFeatures"];
          lettingDetails?: parameters["rowFilter.property.lettingDetails"];
          title?: parameters["rowFilter.property.title"];
          tags?: parameters["rowFilter.property.tags"];
          createdAt?: parameters["rowFilter.property.createdAt"];
          size?: parameters["rowFilter.property.size"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["property"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** property */
          property?: definitions["property"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.property.id"];
          purpose?: parameters["rowFilter.property.purpose"];
          propertyType?: parameters["rowFilter.property.propertyType"];
          description?: parameters["rowFilter.property.description"];
          price?: parameters["rowFilter.property.price"];
          images?: parameters["rowFilter.property.images"];
          address?: parameters["rowFilter.property.address"];
          postalCode?: parameters["rowFilter.property.postalCode"];
          city?: parameters["rowFilter.property.city"];
          bedrooms?: parameters["rowFilter.property.bedrooms"];
          bathrooms?: parameters["rowFilter.property.bathrooms"];
          isAvailable?: parameters["rowFilter.property.isAvailable"];
          keyFeatures?: parameters["rowFilter.property.keyFeatures"];
          lettingDetails?: parameters["rowFilter.property.lettingDetails"];
          title?: parameters["rowFilter.property.title"];
          tags?: parameters["rowFilter.property.tags"];
          createdAt?: parameters["rowFilter.property.createdAt"];
          size?: parameters["rowFilter.property.size"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.property.id"];
          purpose?: parameters["rowFilter.property.purpose"];
          propertyType?: parameters["rowFilter.property.propertyType"];
          description?: parameters["rowFilter.property.description"];
          price?: parameters["rowFilter.property.price"];
          images?: parameters["rowFilter.property.images"];
          address?: parameters["rowFilter.property.address"];
          postalCode?: parameters["rowFilter.property.postalCode"];
          city?: parameters["rowFilter.property.city"];
          bedrooms?: parameters["rowFilter.property.bedrooms"];
          bathrooms?: parameters["rowFilter.property.bathrooms"];
          isAvailable?: parameters["rowFilter.property.isAvailable"];
          keyFeatures?: parameters["rowFilter.property.keyFeatures"];
          lettingDetails?: parameters["rowFilter.property.lettingDetails"];
          title?: parameters["rowFilter.property.title"];
          tags?: parameters["rowFilter.property.tags"];
          createdAt?: parameters["rowFilter.property.createdAt"];
          size?: parameters["rowFilter.property.size"];
        };
        body: {
          /** property */
          property?: definitions["property"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  /** @description Table containing list of properties offered by aaproperty UK */
  property: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: public.purpose
     * @default rent
     * @enum {string}
     */
    purpose: "rent" | "buy";
    /** Format: text */
    propertyType: string;
    /** Format: text */
    description: string;
    /** Format: bigint */
    price: number;
    /** Format: ARRAY */
    images: string[];
    /** Format: text */
    address: string;
    /** Format: text */
    postalCode: string;
    /** Format: text */
    city: string;
    /** Format: bigint */
    bedrooms: number;
    /** Format: bigint */
    bathrooms: number;
    /**
     * Format: boolean
     * @default true
     */
    isAvailable: boolean;
    /** Format: ARRAY */
    keyFeatures?: string[];
    /** Format: jsonb */
    lettingDetails?: string;
    /** Format: text */
    title: string;
    /** Format: ARRAY */
    tags?: unknown[];
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt: string;
    /** Format: bigint */
    size: number;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description property */
  "body.property": definitions["property"];
  /** Format: uuid */
  "rowFilter.property.id": string;
  /** Format: public.purpose */
  "rowFilter.property.purpose": string;
  /** Format: text */
  "rowFilter.property.propertyType": string;
  /** Format: text */
  "rowFilter.property.description": string;
  /** Format: bigint */
  "rowFilter.property.price": string;
  /** Format: ARRAY */
  "rowFilter.property.images": string;
  /** Format: text */
  "rowFilter.property.address": string;
  /** Format: text */
  "rowFilter.property.postalCode": string;
  /** Format: text */
  "rowFilter.property.city": string;
  /** Format: bigint */
  "rowFilter.property.bedrooms": string;
  /** Format: bigint */
  "rowFilter.property.bathrooms": string;
  /** Format: boolean */
  "rowFilter.property.isAvailable": string;
  /** Format: ARRAY */
  "rowFilter.property.keyFeatures": string;
  /** Format: jsonb */
  "rowFilter.property.lettingDetails": string;
  /** Format: text */
  "rowFilter.property.title": string;
  /** Format: ARRAY */
  "rowFilter.property.tags": string;
  /** Format: timestamp with time zone */
  "rowFilter.property.createdAt": string;
  /** Format: bigint */
  "rowFilter.property.size": string;
}

export interface operations {}

export interface external {}
